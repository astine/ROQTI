class Brokerage

  def initialize(args)
    ###
    # Use this initializer to setup a brokerage house.
    # The brokerage house will have multiple accounts so you'll need a variable to manage that
    @name = args[:name]
    @accounts = *** # figure out how you would implement this

    @purchases = []
  end

  def add_account(account)
    # make this a method that will take an account object and associate it with this object.
    # also check to make sure it's not attached to another brokerage
  end

  def assets_under_management()
    # this will scan through all accounts and all assets associated and return the entire value of the brokerage.

    return total_assets
  end

  def total_returns()
    # this method should scan through all accounts/assets and determine the returns generated by the brokerage's trading plan

    returns = 0 # assume this is your temporary variable to store the returns
    for account in @accounts
      returns += account.total_returns() # notice that this will require the account class to have a new method for total_returns
      # look in the account class to see some ideas on how to implement total returns

    end
  end

  def print_ranked_accounts()
    # this method should sort the accounts them by total market value and print them
    # notice market value and total returns will n ot be the same thing

  end

end